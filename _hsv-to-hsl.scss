/*! hsv_to_hsl.scss | MIT License | https://gist.github.com/voxpelli/1069204 */

@function max($v1, $v2) {
    @return if($v1 > $v2, $v1, $v2);
}

@function min($v1, $v2) {
    @return if($v1 < $v2, $v1, $v2);
}

@function hsv-to-hsl($h, $s: 0, $v: 0) {
    @if type-of($h) == "list" {
        $v: nth($h, 3);
        $s: nth($h, 2);
        $h: nth($h, 1);
    }
    @if unit($h) == "deg" {
        $h: 3.1415 * 2 * $h / 360deg;
    }
    @if unit($s) == "%" {
        $s: 0 + $s / 100%;
    }
    @if unit($v) == "%" {
        $v: 0 + $v / 100%;
    }
    $ss: $s * $v;
    $ll: (2 - $s) * $v;
    @if $ll <= 1 {
        $ss: $ss / $ll;
    }
    @else if $ll == 2 {
        $ss: 0;
    }
    @else {
        $ss: $ss / (2 - $ll);
    }
    $ll: $ll / 2;
    @return 360deg * $h / (3.1415 * 2), percentage(max(0, min(1, $ss))), percentage(max(0, min(1, $ll)));
}

@function hsl-to-hsv($h, $ss: 0, $ll: 0) {
    @if type-of($h) == "list" {
        $ll: nth($h, 3);
        $ss: nth($h, 2);
        $h: nth($h, 1);
    }
    @else if type-of($h) == "color" {
        $ll: lightness($h);
        $ss: saturation($h);
        $h: hue($h);
    }
    @if unit($h) == "deg" {
        $h: 3.1415 * 2 * $h / 360deg;
    }
    @if unit($ss) == "%" {
        $ss: 0 + $ss / 100%;
    }
    @if unit($ll) == "%" {
        $ll: 0 + $ll / 100%;
    }
    $ll: $ll * 2;
    @if $ll <= 1 {
        $ss: $ss * $ll;
    }
    @else {
        $ss: $ss * (2 - $ll);
    }
    $v: ($ll + $ss) / 2;
    $s: 2 * $ss / ($ll + $ss);
    @return 360deg * $h / (3.1415 * 2), percentage(max(0, min(1, $s))), percentage(max(0, min(1, $v)));
}

@function color-to-hsv($color) {
    @return hsl-to-hsv($color);
}

@function hsv-to-color($h, $s: 0, $v: 0) {
    $hsl: hsv-to-hsl($h, $s, $v);
    @return hsl(nth($hsl, 1), nth($hsl, 2), nth($hsl, 3));
}
